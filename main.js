!function(){"use strict";class t{constructor(t,e,s){let{name:i,link:n}=t;this._name=i,this._link=n,this._cardSelector=e,this._handleImageClick=s}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".cards__list-trash").addEventListener("click",(()=>{this._cardElement.remove()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeIcon(){this._cardLikeButton.classList.toggle("cards__like-button-active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-cards").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".cards__list-image"),this._cardTitle=this._cardElement.querySelector(".cards__list-title"),this._cardLikeButton=this._cardElement.querySelector(".cards__like-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._cardElement}}class e{constructor(t,e){this._formElement=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}_showInputError=t=>{const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)};_hideInputError=t=>{const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.add(this._errorClass)};_checkInputValidity=t=>{t.validity.valid?this._hideInputError(t):this._showInputError(t)};_hasInvalidInput(t){let e=!1;return this._inputList.forEach((t=>{t.validity.valid||(e=!0)})),e}_toggleButtonState=()=>{this._hasInvalidInput()?this.disableButton():this._enableButton()};_enableButton=()=>{this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1};disableButton=()=>{this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0};_setEventListeners(){this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState(t)}))}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetForm(){this._formElement.reset()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=(document.querySelector(".modal__close-preview-button"),document.querySelector("profile-edit-modal"),document.querySelector("#edit-profile-form"),document.querySelector("#add-card-modal"),document.querySelector("#add-card-form"),document.querySelector("#profile-edit-button")),n=(document.querySelector("#modal-close-button"),document.querySelector("#modal-add-card-close-button"),document.querySelector(".profile__add-button")),o=document.querySelector("#profile-title-input"),r=document.querySelector("#profile-description-input"),a=(document.querySelector(".cards__list"),[...document.querySelectorAll(".modal__form")]),l={},c={};class d{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(t=>{t.target.classList.contains("modal_opened")&&this.close()}))}}class u extends d{constructor(t,e){super(t),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputList=[...this._popupForm.querySelectorAll(".modal__input")]}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e),this._popupForm.reset()})),super.setEventListeners()}}function m(e){return new t({name:e.name,link:e.link},"#cards-template",f).getView()}const _=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=m(t);_.addItem(e)}},".cards__list");_.renderItems();const p=new u({popupSelector:"#add-card-modal"},(function(t){let{title:e,URL:s}=t;const i=m({name:e,link:s});_.addItem(i),l.addCardForm.disableButton(),p.close()}));p.setEventListeners(),n.addEventListener("click",(()=>p.open()));const h=new class{constructor(t){let{profileTitle:e,profileDescription:s}=t;this._profileTitle=document.querySelector(e),this._profileDescription=document.querySelector(s)}getUserInfo(){const t={};return t.title=this._profileTitle.textContent,t.description=this._profileDescription.textContent,t}setUserInfo(t){this._profileTitle.textContent=t.title,this._profileDescription.textContent=t.description}}({profileTitle:".profile__title",profileDescription:".profile__description"}),E=new u({popupSelector:"#profile-edit-modal"},(function(t){h.setUserInfo(t),E.close()}));function f(t,e){S.open({name:t,link:e})}E.setEventListeners();const S=new PopupWithImage({popupSelector:"#modal-image-preview"});S.setEventListeners(),a.forEach((t=>{const i=new e(s,t);i.enableValidation(),l[t.name]=i,c[t.name]=t})),i.addEventListener("click",(()=>{!function(){const t=h.getUserInfo();o.value=t.title,r.value=t.description.trim()}(),l.editCardForm.resetValidation(),E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,